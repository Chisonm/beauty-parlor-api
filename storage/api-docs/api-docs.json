{
    "openapi": "3.0.0",
    "info": {
        "title": "Beauty Parlor API",
        "version": "v1"
    },
    "paths": {
        "/api/v1/user/{id}": {
            "put": {
                "tags": [
                    "Admin/Manage-users"
                ],
                "summary": "update user status",
                "description": "update user status",
                "operationId": "update user",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "ID of user to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "description": "update the status field",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "status"
                                ],
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "format": "text",
                                        "example": "active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not authorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/users": {
            "get": {
                "tags": [
                    "Admin/Manage-users"
                ],
                "summary": "view all users",
                "description": "show all users",
                "operationId": "view all users",
                "responses": {
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not authorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/appointments": {
            "get": {
                "tags": [
                    "Appointment"
                ],
                "summary": "View Appointment",
                "description": "Appointment user and invalidate token",
                "operationId": "Appointment",
                "responses": {
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not authorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Appointment"
                ],
                "summary": "Create Appointment",
                "description": "Appointment user and invalidate token",
                "operationId": "Create Appointment",
                "requestBody": {
                    "description": "fill the",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "date",
                                    "time"
                                ],
                                "properties": {
                                    "date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2021-05-01"
                                    },
                                    "time": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "11:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not authorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/appointment-history": {
            "get": {
                "tags": [
                    "Appointment"
                ],
                "summary": "View Appointment History",
                "description": "Appointment user and invalidate token",
                "operationId": "View Appointment History",
                "responses": {
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not authorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/appointment/{id}": {
            "get": {
                "tags": [
                    "Appointment"
                ],
                "summary": "View Appointment by id",
                "description": "Appointment user and invalidate token",
                "operationId": "View Appointment by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Appointment to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not authorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Appointment"
                ],
                "summary": "update appointment status",
                "description": "Appointment user and invalidate token",
                "operationId": "update appointment status",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Appointment history to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "status"
                                ],
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "example": "Approved"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not authorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/appointment/{id}/history": {
            "get": {
                "tags": [
                    "Appointment"
                ],
                "summary": "View Appointment History by id",
                "description": "Appointment user and invalidate token",
                "operationId": "View Appointment History by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Appointment to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not authorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/appointment-user-history/{id}": {
            "get": {
                "tags": [
                    "Appointment"
                ],
                "summary": "View Appointment History by user id",
                "description": "Appointment user and invalidate token",
                "operationId": "View Appointment History by user id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Appointment history to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not authorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/signup": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Sign up",
                "description": "Signup",
                "operationId": "Signup",
                "requestBody": {
                    "description": "Sign up",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password",
                                    "first_name",
                                    "last_name",
                                    "phone_number"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "maxLength": 40,
                                        "example": "daniel"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "maxLength": 40,
                                        "example": "chisom"
                                    },
                                    "username": {
                                        "type": "string",
                                        "maxLength": 40,
                                        "example": "chisom"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "daniel@gmail.com"
                                    },
                                    "phone_number": {
                                        "type": "string",
                                        "maxLength": 40,
                                        "example": "08012345678"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "chisonum"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong while processing your request."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "500"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "error_debug": {
                                            "type": "string",
                                            "example": "The provided credentials are incorrect."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/signin": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Sign in",
                "description": "Login with email and password",
                "operationId": "Signin",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "daniel32@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "chisonum"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong while processing your request."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": "500"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "error_debug": {
                                            "type": "string",
                                            "example": "The provided credentials are incorrect."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/shops": {
            "get": {
                "tags": [
                    "Shop"
                ],
                "summary": "view shop",
                "description": "shop user and invalidate token",
                "operationId": "shop",
                "responses": {
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not authorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/shops/{shop}": {
            "get": {
                "tags": [
                    "Shop"
                ],
                "summary": "view a shop",
                "description": "shop user and invalidate token",
                "operationId": "view shop by Id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of shop to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not authorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/create-shop": {
            "post": {
                "tags": [
                    "Shop"
                ],
                "summary": "create shop",
                "description": "shop user and invalidate token",
                "operationId": "create shop",
                "requestBody": {
                    "description": "fill the",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "shop_name",
                                    "shop_description",
                                    "shop_address",
                                    "opening_time",
                                    "closing_time"
                                ],
                                "properties": {
                                    "shop_name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test shop"
                                    },
                                    "shop_description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test description"
                                    },
                                    "shop_address": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test address"
                                    },
                                    "opening_time": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "8:00"
                                    },
                                    "closing_time": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "10:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not authorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/update-shop/{shop}": {
            "put": {
                "tags": [
                    "Shop"
                ],
                "summary": "update shop",
                "description": "shop user and invalidate token",
                "operationId": "update shop",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of shop to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "description": "fill the",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "shop_name",
                                    "shop_description",
                                    "shop_address",
                                    "opening_time",
                                    "closing_time"
                                ],
                                "properties": {
                                    "shop_name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test shop"
                                    },
                                    "shop_description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test description"
                                    },
                                    "shop_address": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test address"
                                    },
                                    "opening_time": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "8:00"
                                    },
                                    "closing_time": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "10:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not authorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/delete-shop/{shop}": {
            "delete": {
                "tags": [
                    "Shop"
                ],
                "summary": "delete shop",
                "description": "shop user and invalidate token",
                "operationId": "delete shop",
                "parameters": [
                    {
                        "name": "appointmentId",
                        "in": "path",
                        "description": "ID of shop to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not authorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "required": [
                    "password"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "role": {
                        "description": "User role",
                        "type": "string",
                        "readOnly": "true",
                        "example": "vendor"
                    },
                    "email": {
                        "description": "User unique email address",
                        "type": "string",
                        "format": "email",
                        "readOnly": "true",
                        "example": "daniel32@gmail.com"
                    },
                    "email_verified_at": {
                        "description": "Datetime marker of verification status",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true",
                        "example": "2019-02-25 12:59:20"
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 32,
                        "example": "daniel"
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 32,
                        "example": "chisom"
                    },
                    "username": {
                        "type": "string",
                        "maxLength": 32,
                        "example": "chisom"
                    },
                    "status": {
                        "type": "string",
                        "maxLength": 32,
                        "example": "Active"
                    },
                    "phone_number": {
                        "type": "string",
                        "maxLength": 32,
                        "example": "08012345678"
                    },
                    "created_at": {
                        "description": "Initial creation timestamp",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "data"
                }
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "http",
                "description": "Laravel Sanctum token authentication",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}